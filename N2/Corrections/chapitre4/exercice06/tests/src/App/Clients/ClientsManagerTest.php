<?php
namespace App\Clients;

/**
 * Generated by PHPUnit_SkeletonGenerator.
 */
class ClientsManagerTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var ClientsManager
     */
    protected $object;
    
    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $db = \App\Bdd\BddFactory::create("memory");
        $db->exec(file_get_contents(APP_ROOT . '/ressources/tests/databases/memory.sql'));
        $this->object = new ClientsManager($db);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        unset($this->object);
    }

    /**
     * @covers App\Clients\ClientsManager::__construct
     * @covers App\Clients\ClientsManager::testUserAndPass
     */
    public function testTestUserAndPass()
    {
        $resultat1 = $this->object->testUserAndPass("jack", "o'neil");
        $this->assertNotFalse($resultat1);
        
        $resultat2 = $this->object->testUserAndPass("inexistant", "inexistant");
        $this->assertFalse($resultat2);
    }

    /**
     * @covers App\Clients\ClientsManager::loadClient
     * @covers App\Clients\ClientsManager::offsetGet
     */
    public function testLoadClient() {
        $cli = $this->object[1];
        $this->assertNotFalse($cli);
        
        try {
            $cli = true;
            $this->object[9999];
        } catch (\PHPUnit_Framework_Exception $ex) {
            $this->assertEquals("Undefined offset: 9999", $ex->getMessage());
            $cli = false;
        }
        $this->assertFalse($cli);
    }

    /**
     * @covers App\Clients\ClientsManager::getIterator
     */
    public function testGetIterator() {
        foreach ($this->object as $cli) {
            $clients[] = $cli;
        }
        
        $this->assertCount(4, $clients);
    }
}
